{"ast":null,"code":"var _jsxFileName = \"/Users/haisemjemal/Desktop/instaflame-revamped/client/src/navigation/Navbar/NavbarContainer.jsx\";\nimport NavbarView from \"./NavbarView\";\nimport { isLoggedIn, loginToken, setUser } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport * as utils from \"../../Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NavbarContainer = ({\n  isLoggedIn,\n  setToken,\n  getUser\n}) => {\n  const logoutHandler = async () => {\n    try {\n      localStorage.clear();\n      loginToken(\"\");\n      setUser(\"\");\n      isLoggedIn(false);\n      let response = await fetch(`${utils.backendRoute}/auth/logout`, {\n        headers: {\n          jwt: setToken\n        }\n      });\n      await response.json();\n    } catch (err) {\n      console.log(\"err\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NavbarView, {\n      logoutHandler: logoutHandler,\n      getUser: getUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = NavbarContainer;\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  isLoggedIn\n})(NavbarContainer);\n\nvar _c;\n\n$RefreshReg$(_c, \"NavbarContainer\");","map":{"version":3,"sources":["/Users/haisemjemal/Desktop/instaflame-revamped/client/src/navigation/Navbar/NavbarContainer.jsx"],"names":["NavbarView","isLoggedIn","loginToken","setUser","connect","utils","NavbarContainer","setToken","getUser","logoutHandler","localStorage","clear","response","fetch","backendRoute","headers","jwt","json","err","console","log","mapStateToProps","state"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,cAAvB;AAEA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,OAAjC,QAAgD,eAAhD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;;;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEL,EAAAA,UAAF;AAAcM,EAAAA,QAAd;AAAwBC,EAAAA;AAAxB,CAAD,KAAuC;AAC7D,QAAMC,aAAa,GAAG,YAAY;AAChC,QAAI;AACFC,MAAAA,YAAY,CAACC,KAAb;AACAT,MAAAA,UAAU,CAAC,EAAD,CAAV;AACAC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,UAAIW,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,KAAK,CAACS,YAAa,cAAvB,EAAsC;AAC9DC,QAAAA,OAAO,EAAE;AACPC,UAAAA,GAAG,EAAET;AADE;AADqD,OAAtC,CAA1B;AAKA,YAAMK,QAAQ,CAACK,IAAT,EAAN;AACD,KAXD,CAWE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD;AACF,GAfD;;AAiBA,sBACE;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,aAAa,EAAEX,aAA3B;AAA0C,MAAA,OAAO,EAAED;AAAnD;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,CAvBD;;KAAMF,e;;AAyBN,MAAMe,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAOA,KAAP;AACD,CAFD;;AAIA,eAAelB,OAAO,CAACiB,eAAD,EAAkB;AACtCpB,EAAAA;AADsC,CAAlB,CAAP,CAEZK,eAFY,CAAf","sourcesContent":["import NavbarView from \"./NavbarView\";\n\nimport { isLoggedIn, loginToken, setUser } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport * as utils from \"../../Utils\";\n\nconst NavbarContainer = ({ isLoggedIn, setToken, getUser }) => {\n  const logoutHandler = async () => {\n    try {\n      localStorage.clear();\n      loginToken(\"\");\n      setUser(\"\");\n      isLoggedIn(false);\n      let response = await fetch(`${utils.backendRoute}/auth/logout`, {\n        headers: {\n          jwt: setToken,\n        },\n      });\n      await response.json();\n    } catch (err) {\n      console.log(\"err\");\n    }\n  };\n\n  return (\n    <>\n      <NavbarView logoutHandler={logoutHandler} getUser={getUser} />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nexport default connect(mapStateToProps, {\n  isLoggedIn,\n})(NavbarContainer);\n"]},"metadata":{},"sourceType":"module"}