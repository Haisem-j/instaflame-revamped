{"ast":null,"code":"var _jsxFileName = \"/Users/haisemjemal/Desktop/instaflame-revamped/client/src/components/Profile/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport HeaderProfile from \"./HeaderProfile\";\nimport Post from \"./Post\";\nimport * as utils from \"../../Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Profile(props) {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        let tempName = props.location.pathname.split(\"/\");\n        let response = await fetch(`${utils.backendRoute}/posts/profile/${tempName[2]}`, {\n          method: \"GET\",\n          headers: {\n            jwt: props.setToken\n          }\n        });\n        let final = await response.json();\n        return {\n          posts: final.data,\n          tempName: tempName[2]\n        };\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getPosts().then(res => {\n      setName(res.tempName);\n      setPosts(res.posts);\n    });\n  }, [props.location.pathname, props.setToken]);\n\n  const renderCards = () => {\n    if (posts.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"LOOOOOOOOOOOADING.......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    } else {\n      return posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post.imageId,\n          name: name,\n          history: props.history\n        }, post.imageId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section has-background-light custom-border-top\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"custom-body-center\",\n      children: [/*#__PURE__*/_jsxDEV(HeaderProfile, {\n        posts: posts.length,\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"section custom-border-top\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"columns is-multiline\",\n          children: renderCards()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Profile, \"kbRoXCs3l+EGEknYG2YIc8Rl02k=\");\n\n_c = Profile;\n\nconst mapStateToProps = state => {\n  return state;\n};\n\nexport default connect(mapStateToProps, null)(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/haisemjemal/Desktop/instaflame-revamped/client/src/components/Profile/index.js"],"names":["useState","useEffect","connect","HeaderProfile","Post","utils","Profile","props","name","setName","posts","setPosts","getPosts","tempName","location","pathname","split","response","fetch","backendRoute","method","headers","jwt","setToken","final","json","data","err","console","log","then","res","renderCards","length","map","post","imageId","history","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport HeaderProfile from \"./HeaderProfile\";\nimport Post from \"./Post\";\n\nimport * as utils from \"../../Utils\";\n\nfunction Profile(props) {\n  const [name, setName] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        let tempName = props.location.pathname.split(\"/\");\n        let response = await fetch(\n          `${utils.backendRoute}/posts/profile/${tempName[2]}`,\n          {\n            method: \"GET\",\n            headers: {\n              jwt: props.setToken,\n            },\n          }\n        );\n        let final = await response.json();\n        return {\n          posts: final.data,\n          tempName: tempName[2],\n        };\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getPosts().then((res) => {\n      setName(res.tempName);\n      setPosts(res.posts);\n    });\n  }, [props.location.pathname, props.setToken]);\n\n  const renderCards = () => {\n    if (posts.length === 0) {\n      return <div>LOOOOOOOOOOOADING.......</div>;\n    } else {\n      return posts.map((post) => {\n        return (\n          <Post\n            key={post.imageId}\n            post={post.imageId}\n            name={name}\n            history={props.history}\n          />\n        );\n      });\n    }\n  };\n\n  return (\n    <section className=\"section has-background-light custom-border-top\">\n      <div className=\"custom-body-center\">\n        <HeaderProfile posts={posts.length} name={name} />\n        <section className=\"section custom-border-top\">\n          <div className=\"columns is-multiline\">{renderCards()}</div>\n        </section>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = state => {\n    return state;\n};\nexport default connect(mapStateToProps, null)(Profile);\n  "]},"metadata":{},"sourceType":"module"}