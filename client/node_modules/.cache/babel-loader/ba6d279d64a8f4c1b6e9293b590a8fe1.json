{"ast":null,"code":"var _jsxFileName = \"/Users/haisemjemal/Desktop/instaflame-revamped/client/src/pages/Register/RegisterContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport RegisterView from \"./RegisterView\";\nimport * as utils from \"../../Utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterContainer = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const mySubmitHandler = async event => {\n    event.preventDefault();\n    const user = {\n      username: username,\n      password: password,\n      email: email\n    }; // try {\n    //   event.target.reset();\n    //   let response = await fetch(`${utils.backendRoute}/auth/registerUser`, {\n    //     method: \"POST\",\n    //     body: JSON.stringify(user),\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //   });\n    //   let result = await response.json();\n    //   console.log(result);\n    //   if (result.success) {\n    //     setIsSuccess(true);\n    //   } else {\n    //     setErrorMessage(result.msg);\n    //     setIsError(true);\n    //   }\n    // } catch (err) {\n    //   console.log(err);\n    //   setIsError(true);\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RegisterView, {\n      mySubmitHandler: mySubmitHandler,\n      setUsername: setUsername,\n      setPassword: setPassword,\n      setEmail: setEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(RegisterContainer, \"qXzfcSnOp7L14Dddg986jK2+oO8=\");\n\n_c = RegisterContainer;\nexport default RegisterContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterContainer\");","map":{"version":3,"sources":["/Users/haisemjemal/Desktop/instaflame-revamped/client/src/pages/Register/RegisterContainer.jsx"],"names":["useState","RegisterView","utils","RegisterContainer","username","setUsername","email","setEmail","password","setPassword","mySubmitHandler","event","preventDefault","user"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;;;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AAC9B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,eAAe,GAAG,MAAOC,KAAP,IAAiB;AACvCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,IAAI,GAAG;AACXT,MAAAA,QAAQ,EAAEA,QADC;AAEXI,MAAAA,QAAQ,EAAEA,QAFC;AAGXF,MAAAA,KAAK,EAAEA;AAHI,KAAb,CAHuC,CASvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA/BD;;AAiCA,sBACE;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,eAAe,EAAEI,eADnB;AAEE,MAAA,WAAW,EAAEL,WAFf;AAGE,MAAA,WAAW,EAAEI,WAHf;AAIE,MAAA,QAAQ,EAAEF;AAJZ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAUD,CAhDD;;GAAMJ,iB;;KAAAA,iB;AAkDN,eAAeA,iBAAf","sourcesContent":["import { useState } from \"react\";\n\nimport RegisterView from \"./RegisterView\";\n\nimport * as utils from \"../../Utils\";\n\nconst RegisterContainer = () => {\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const mySubmitHandler = async (event) => {\n    event.preventDefault();\n\n    const user = {\n      username: username,\n      password: password,\n      email: email,\n    };\n\n    // try {\n    //   event.target.reset();\n    //   let response = await fetch(`${utils.backendRoute}/auth/registerUser`, {\n    //     method: \"POST\",\n    //     body: JSON.stringify(user),\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //     },\n    //   });\n\n    //   let result = await response.json();\n    //   console.log(result);\n    //   if (result.success) {\n    //     setIsSuccess(true);\n    //   } else {\n    //     setErrorMessage(result.msg);\n    //     setIsError(true);\n    //   }\n    // } catch (err) {\n    //   console.log(err);\n    //   setIsError(true);\n    // }\n  };\n\n  return (\n    <>\n      <RegisterView\n        mySubmitHandler={mySubmitHandler}\n        setUsername={setUsername}\n        setPassword={setPassword}\n        setEmail={setEmail}\n      />\n    </>\n  );\n};\n\nexport default RegisterContainer;\n"]},"metadata":{},"sourceType":"module"}