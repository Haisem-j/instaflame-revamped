{"ast":null,"code":"import * as utils from \"../Utils\";\nexport const getAllPosts = async token => {\n  try {\n    let response = await fetch(`${utils.backendRoute}/posts/getAll`, {\n      method: \"GET\",\n      headers: {\n        jwt: token\n      }\n    });\n    let results = await response.json();\n    return results.data.posts;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const deletePost = async (token, post) => {\n  try {\n    let response = await fetch(`${utils.backendRoute}/posts/del/${post}`, {\n      method: \"DELETE\",\n      headers: {\n        jwt: token\n      }\n    });\n    await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/Users/haisemjemal/Desktop/instaflame-revamped/client/src/services/postsServices.js"],"names":["utils","getAllPosts","token","response","fetch","backendRoute","method","headers","jwt","results","json","data","posts","err","console","log","deletePost","post"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAOC,KAAP,IAAiB;AAC1C,MAAI;AACF,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,KAAK,CAACK,YAAa,eAAvB,EAAuC;AAC/DC,MAAAA,MAAM,EAAE,KADuD;AAE/DC,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAEN;AADE;AAFsD,KAAvC,CAA1B;AAMA,QAAIO,OAAO,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAApB;AACA,WAAOD,OAAO,CAACE,IAAR,CAAaC,KAApB;AACD,GATD,CASE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAbM;AAeP,OAAO,MAAMG,UAAU,GAAG,OAAOd,KAAP,EAAce,IAAd,KAAuB;AAC/C,MAAI;AACF,QAAId,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,KAAK,CAACK,YAAa,cAAaY,IAAK,EAAzC,EAA4C;AACpEX,MAAAA,MAAM,EAAE,QAD4D;AAEpEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,GAAG,EAAEN;AADE;AAF2D,KAA5C,CAA1B;AAMA,UAAMC,QAAQ,CAACO,IAAT,EAAN;AACD,GARD,CAQE,OAAOG,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAZM","sourcesContent":["import * as utils from \"../Utils\";\n\nexport const getAllPosts = async (token) => {\n  try {\n    let response = await fetch(`${utils.backendRoute}/posts/getAll`, {\n      method: \"GET\",\n      headers: {\n        jwt: token,\n      },\n    });\n    let results = await response.json();\n    return results.data.posts;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deletePost = async (token, post) => {\n  try {\n    let response = await fetch(`${utils.backendRoute}/posts/del/${post}`, {\n      method: \"DELETE\",\n      headers: {\n        jwt: token,\n      },\n    });\n    await response.json();\n  } catch (err) {\n    console.log(err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}