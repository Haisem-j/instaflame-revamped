{"version":3,"sources":["reducers/loggedIn.js","reducers/setToken.js","reducers/getUser.js","reducers/index.js","actions/index.js","Utils.js","components/Navbar.js","components/Login/index.js","components/SignUp/index.js","components/Home/Card.js","components/Home/index.js","components/Profile/HeaderProfile.js","components/Profile/Post.js","components/Profile/index.js","components/CreatePicture/index.js","App.js","index.js"],"names":["loggedIn","action","type","payload","setToken","init","getUser","combineReducers","isLoggedIn","bool","loginToken","token","backendRoute","imageRoute","connect","state","props","logoutHandler","a","fetch","utils","headers","response","json","console","log","className","role","aria-label","to","name","placeholder","onClick","setUser","user","useState","username","setUsername","password","setPassword","isError","setIsError","errorMessage","setErrorMessage","mySubmitHandler","event","preventDefault","method","body","JSON","stringify","result","success","data","msg","style","marginTop","onSubmit","onChange","e","target","value","SignUp","email","setEmail","isSuccess","setIsSuccess","reset","liked","setLike","likePost","post","imageId","jwt","src","alt","profileId","likes","desc","border","posts","setPosts","useEffect","results","getAllPosts","then","res","length","map","width","margin","deletePost","history","push","setName","tempName","location","pathname","split","final","getPosts","works","setWorks","setDesc","file","formData","FormData","append","files","textAlign","marginBottom","id","justifyContent","exact","path","component","Body","Profile","CreatePicture","Login","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a5067d0.chunk.js","sourcesContent":["const loggedIn = (init = false, action) => {\n  switch (action.type) {\n    case \"LOGGED_IN\":\n      return action.payload === true ? true : false;\n    default:\n      return false;\n  }\n};\n\nexport default loggedIn\n  ","const setToken = (init = false, action) => {\n  switch (action.type) {\n    case \"TOKEN_TRUE\":\n      return action.payload;\n    default:\n      return init;\n  }\n};\n\n\nexport default setToken","const getUser = (init = '', action) =>{\n    switch (action.type) {\n        case \"USER_NAME\":\n        return action.payload\n        default:\n        return init;\n    }\n}\n\nexport default getUser\n  ","import {combineReducers} from 'redux'\nimport loggedIn from './loggedIn'\nimport setToken from './setToken';\nimport getUser from './getUser';\n\nexport default combineReducers({\n    loggedIn,\n    setToken,\n    getUser\n})","export const isLoggedIn = (bool) =>{\n    return {\n        type: 'LOGGED_IN',\n        payload: bool\n    }\n}\nexport const loginToken = (token) =>{\n    return{\n        type: 'TOKEN_TRUE',\n        payload: token\n    }\n}\nexport const setUser = (user) =>{\n    return{\n        type: 'USER_NAME',\n        payload: user\n    }\n}\n","const backendRoute = 'http://localhost:8000/api'\nconst imageRoute = 'http://localhost:8000/images'\n\nexport {\n    backendRoute,\n    imageRoute\n};","import { Link } from \"react-router-dom\";\nimport { isLoggedIn } from \"../actions/index\";\nimport { connect } from \"react-redux\";\nimport * as utils from \"../Utils\";\n\nfunction Navbar(props) {\n\n    const logoutHandler = async () =>{\n        try{\n            props.isLoggedIn(false);\n            let response = await fetch(`${utils.backendRoute}/auth/logout`,\n            {\n                headers: {\n                    \"jwt\": props.setToken\n                }\n            })\n            await response.json()\n        }catch (err){\n            console.log('err');\n        }\n    }\n\n    return (\n        <nav\n        className=\"navbar is-spaced custom-center\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"navbar-brand\">\n          <Link to=\"/\">\n            <div className=\"navbar-item\">\n              <span className=\"icon is-size-1 right\">\n                <ion-icon name=\"flame\"></ion-icon>\n              </span>\n              <h1 className=\"is-size-4\">InstaFlame</h1>\n            </div>\n          </Link>\n        </div>\n        <div className=\"navbar-menu\">\n          <div className=\"navbar-start auto-left\">\n            <div className=\"navbar-item\">\n              <input className=\"input\" type=\"text\" placeholder=\"Search Users\" />\n            </div>\n          </div>\n          <div className=\"navbar-end\">\n            <Link to={`/profile/${props.getUser}`}>\n              <div className=\"navbar-item right\">\n                <span className=\"icon is-size-1\">\n                  <ion-icon name=\"person\"></ion-icon>\n                </span>\n              </div>\n            </Link>\n            <Link to=\"/upload\">\n              <div className=\"navbar-item right\">\n                <span className=\"icon is-size-1\">\n                  <ion-icon name=\"cloud-upload\"></ion-icon>\n                </span>\n              </div>\n            </Link>\n            <div className=\"navbar-item btn\" onClick={logoutHandler}>\n              <span className=\"icon is-size-1\">\n                <ion-icon name=\"power\"></ion-icon>\n              </span>\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n}\n\nconst mapStateToProps = state =>{\n    return state\n}\n\nexport default connect(mapStateToProps,{\n    isLoggedIn\n})(Navbar)","import React, {useState} from 'react'\nimport { connect } from \"react-redux\";\nimport { isLoggedIn, loginToken, setUser} from \"../../actions\";\nimport { Link } from \"react-router-dom\";\nimport * as utils from '../../Utils'\n\nfunction Login(props){\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [isError, setIsError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('Something went wrong....')\n\n    const mySubmitHandler = async event=>{\n        event.preventDefault();\n        const user = {\n          username: username,\n          password: password,\n        };\n        console.log('user here');\n        console.log(user);\n    \n        try {\n          let response = await fetch(`${utils.backendRoute}/auth/login`, {\n            method: \"POST\",\n            body: JSON.stringify(user),\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n    \n          let result = await response.json();\n          if(result.success){\n            props.setUser(user.username)\n            props.loginToken(result.data.token)\n            props.isLoggedIn(true);\n          }else{\n            setErrorMessage(result.msg)\n            setIsError(true)\n          }\n        } catch (err) {\n          console.log(err);\n          setIsError(true)\n        }\n    }\n\n    return (\n        <section className=\"hero has-background-light is-fullheight \">\n        <div className=\"custom-login\">\n          <div className=\"box\">\n            <div className=\"custom-flex\">\n              <span className=\"icon is-size-1\" style={{ marginTop: \"5px\" }}>\n                <ion-icon name=\"flame\"></ion-icon>\n              </span>\n\n              <h1 className=\"is-size-4\">InstaFlame</h1>\n            </div>\n\n            <form onSubmit={mySubmitHandler}>\n            {isError === true ? (\n                <div className=\"button is-danger m-bottom\">{errorMessage}</div>\n              ) : (\n                \"\"\n              )}\n              <div className=\"field\">\n                <p className=\"control has-icons-left has-icons-right\">\n                  <input\n                    className=\"input\"\n                    type=\"user\"\n                    name=\"username\"\n                    placeholder=\"Username\"\n                    onChange={(e) => setUsername(e.target.value)}\n                  />\n                  <span className=\"icon is-small is-left\">\n                    <i className=\"fas fa-envelope\"></i>\n                  </span>\n                  <span className=\"icon is-small is-right\">\n                    <i className=\"fas fa-check\"></i>\n                  </span>\n                </p>\n              </div>\n              <div className=\"field\">\n                <p className=\"control has-icons-left\">\n                  <input\n                    className=\"input\"\n                    type=\"password\"\n                    name=\"password\"\n                    placeholder=\"Password\"\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                  <span className=\"icon is-small is-left\">\n                    <i className=\"fas fa-lock\"></i>\n                  </span>\n                </p>\n              </div>\n              <div className=\"field\">\n                <p className=\"control custom-login-button\">\n                  <button className=\"button is-success is-small\">Login</button>\n                  <Link to=\"/register\">\n                    <button className=\"button is-info is-small\">Sign Up</button>\n                  </Link>\n                </p>\n              </div>\n            </form>\n          </div>\n        </div>\n      </section>\n    )\n}\n\nconst mapStateToProps = state => {\n    return state;\n  };\n  \n  export default connect(mapStateToProps, {\n    isLoggedIn,\n    loginToken,\n    setUser\n  })(Login);\n  ","import React, {useState} from 'react'\nimport { Link } from \"react-router-dom\";\nimport * as utils from '../../Utils'\nfunction SignUp(){\n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [isSuccess, setIsSuccess] = useState(false)\n    const [isError, setIsError] = useState(false)\n    const [errorMessage, setErrorMessage] = useState('Something went wrong....')\n\n    const mySubmitHandler = async event=>{\n        event.preventDefault();\n\n        const user = {\n          username: username,\n          password: password,\n          email: email\n        };\n    \n        try {\n          event.target.reset();\n          let response = await fetch(`${utils.backendRoute}/auth/registerUser`, {\n            method: \"POST\",\n            body: JSON.stringify(user),\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          });\n    \n          let result = await response.json();\n          console.log(result);\n          if(result.success){\n            setIsSuccess(true)\n          }else{\n            setErrorMessage(result.msg)\n            setIsError(true)\n          }\n        } catch (err) {\n          console.log(err);\n          setIsError(true)\n        }\n    }\n\n    return (\n        <section className=\"hero has-background-light is-fullheight \">\n          <div className=\"custom-login\">\n            <div className=\"box\">\n              <div className=\"custom-flex\">\n                <span className=\"icon is-size-1\" style={{ marginTop: \"5px\" }}>\n                  <ion-icon name=\"flame\"></ion-icon>\n                </span>\n\n                <h1 className=\"is-size-4\">InstaFlame</h1>\n              </div>\n              {isSuccess === true ? (\n                <div className=\"button is-success m-bottom\">{`Username ${username} created successfully!!`}</div>\n              ) : (\n                \"\"\n              )}\n              {isError === true ? (\n                <div className=\"button is-danger m-bottom\">{errorMessage}</div>\n              ) : (\n                \"\"\n              )}\n\n              <form onSubmit={mySubmitHandler}>\n                <div className=\"field\">\n                  <p className=\"control has-icons-left has-icons-right\">\n                    <input\n                      className=\"input\"\n                      type=\"username\"\n                      placeholder=\"Username\"\n                      onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <span className=\"icon is-small is-left\">\n                      <i className=\"fas fa-envelope\"></i>\n                    </span>\n                    <span className=\"icon is-small is-right\">\n                      <i className=\"fas fa-check\"></i>\n                    </span>\n                  </p>\n                </div>\n                <div className=\"field\">\n                  <p className=\"control has-icons-left has-icons-right\">\n                    <input\n                      className=\"input\"\n                      type=\"email\"\n                      placeholder=\"Email\"\n                      onChange={(e)=>setEmail(e.target.value)}\n                    />\n                    <span className=\"icon is-small is-left\">\n                      <i className=\"fas fa-envelope\"></i>\n                    </span>\n                    <span className=\"icon is-small is-right\">\n                      <i className=\"fas fa-check\"></i>\n                    </span>\n                  </p>\n                </div>\n                <div className=\"field\">\n                  <p className=\"control has-icons-left\">\n                    <input\n                      className=\"input\"\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      onChange={(e) => setPassword(e.target.value)}\n                    />\n                    <span className=\"icon is-small is-left\">\n                      <i className=\"fas fa-lock\"></i>\n                    </span>\n                  </p>\n                </div>\n                <div className=\"field\">\n                  <p className=\"control custom-login-button\">\n                    <button className=\"button is-info is-small\">Sign Up</button>\n                  </p>\n                  <div className=\"content flex-center\">\n                    <p className=\"is-size-7\">\n                      Already have an account?{\" \"}\n                      <Link to=\"/login\" className=\"no-link\">\n                        Login here.\n                      </Link>\n                    </p>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </section>\n    )\n}\nexport default SignUp","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport * as utils from \"../../Utils\";\n\nfunction Card(props) {\n  const [liked, setLike] = useState(false);\n\n  const likePost = async () => {\n    if (!liked) {\n      try {\n        let response = await fetch(\n          `${utils.backendRoute}/posts/like/${props.post.imageId}`,\n          {\n            headers: {\n              jwt: props.setToken,\n            },\n          }\n        );\n        await response.json();\n        setLike(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n  return (\n    <div className=\"card custom-card-bottom\">\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-32x32\">\n              <img\n                className=\"is-rounded\"\n                src=\"https://bulma.io/images/placeholders/96x96.png\"\n                alt=\"Placeholder\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <Link to={`/profile/${props.post.profileId}`}>\n              <p className=\"title is-size-6\">{props.post.profileId}</p>\n            </Link>\n          </div>\n        </div>\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={`${utils.imageRoute}/${props.post.imageId}`}\n              alt=\"Placeholder\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <span\n            className={`icon is-size-4 icon-padding ${liked ? \"heart\" : \"\"}`}\n            onClick={likePost}\n          >\n            <i className=\"fas fa-heart\"></i>\n          </span>\n          <span className=\"icon is-size-4 icon-padding\">\n            <i className=\"far fa-comment\"></i>\n          </span>\n        </div>\n        <p className=\"subtitle is-size-7 p-margin\">\n          {liked ? props.post.likes + 1 : props.post.likes} likes\n        </p>\n        <div className=\"content\">{props.post.desc}</div>\n      </div>\n      <footer className=\"card-footer\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          style={{ border: \"none\" }}\n          placeholder=\"Add a comment...\"\n        />\n      </footer>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\nexport default connect(mapStateToProps, null)(Card);\n","import { useState, useEffect } from \"react\";\nimport Card from \"./Card\";\nimport { connect } from \"react-redux\";\nimport * as utils from '../../Utils'\n\n\nfunction Body(props) {\n    const [posts, setPosts] = useState([])\n    useEffect(()=>{\n        const getAllPosts = async () =>{\n            try{\n                let response = await fetch(`${utils.backendRoute}/posts/getAll`, {\n                    method: \"GET\",\n                    headers: {\n                      \"jwt\": props.setToken\n                    }\n                  }); \n                let results = await response.json()\n                return results.data.posts\n            }catch (err){\n                console.log(err);\n            }\n        }\n        getAllPosts().then((res) => setPosts(res))\n    }, [props.setToken])\n\n    const renderCards = () =>{\n        if(posts.length === 0){\n            return <div>LOOOOOOOOOOOADING.......</div>\n        }else{\n            return posts.map(post =>{\n                return <Card key={post.imageId} post={post}/>\n            })\n        }\n    }\n    return(\n        <section className=\"section has-background-light custom-border-top\">\n          <div className=\"columns custom-body-center\">\n            <div className=\"column is-10\">\n              <div className=\"container\">{renderCards()}</div>\n            </div>\n            <div className=\"column\">\n              <div className=\"menu\">\n                <article className=\"media center\">\n                  <figure className=\"media-left\">\n                    <span className=\"image is-48x48 \">\n                      <img\n                        className=\"is-rounded\"\n                        src=\"https://previews.123rf.com/images/alphaspirit/alphaspirit1504/alphaspirit150400118/38665682-simple-young-man-face-smiling-and-optimistic.jpg\"\n                        alt=\"man smiling\"\n                      />\n                    </span>\n                  </figure>\n                  <div className=\"media-content\" style={{ width: \"105px\" }}>\n                    <div className=\"content\">\n                      <p className=\"is-size-6\" style={{ margin: \"0px\" }}>\n                        <strong>{props.getUser}</strong>\n                      </p>\n                    </div>\n                  </div>\n                </article>\n              </div>\n            </div>\n          </div>\n        </section>\n    )\n}\n\nconst mapStateToProps = state => {\n    return state;\n  };\n  export default connect(mapStateToProps, null)(Body);\n  ","import { connect } from \"react-redux\";\n\nfunction HeaderProfile(props) {\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-one-third\">\n        <figure className=\"image is-128x128 center-container\">\n          <img\n            className=\"is-rounded\"\n            src=\"https://bulma.io/images/placeholders/96x96.png\"\n            alt=\"Placeholder \"\n          />\n        </figure>\n      </div>\n      <div className=\"column\">\n        <div className=\"media-content\">\n          <article className=\"media custom-profile-margin\">\n            <figure className=\"media-left\">\n              <h1 className=\"title\">{props.name}</h1>\n            </figure>\n            <div className=\"media-content\">\n              <button className=\"button\">Edit Profile</button>\n            </div>\n          </article>\n          <h2 className=\"subtitle-5 custom-followers\">\n            <span>{props.posts} posts</span>\n          </h2>\n          <h1 className=\"title is-6 is-spaced\">Toronto</h1>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return state;\n};\n\nexport default connect(mapStateToProps)(HeaderProfile);\n","import { connect } from \"react-redux\";\nimport * as utils from '../../Utils';\n\nfunction Post(props) {\n    const deletePost = async () =>{\n        try {\n            let response = await fetch(\n              `${utils.backendRoute}/posts/del/${props.post}`,\n              {\n                method: \"DELETE\",\n                headers: {\n                  \"jwt\": props.setToken\n                }\n              }\n            );\n            await response.json();\n            props.history.push('/home');\n          } catch (err) {\n            console.log(err);\n        }\n    }\n    if(props.name === props.getUser){\n        return(\n            <div className=\"column is-one-third\" style={{ marginTop: \"-20px\" }} >\n                <figure className=\"image is-1x1\">\n                    <div className=\"x-logo delete is-medium\" onClick={deletePost} />\n                    <img src={`${utils.imageRoute}/${props.post}`} alt=\"Placeholder\" />\n                </figure>\n          </div>\n        )\n    }else{\n        return(\n            <div className=\"column is-one-third\">\n                <figure className=\"image is-1x1\">\n                    <img src={`${utils.imageRoute}/${props.post}`} alt=\"Placeholder\" />\n                </figure>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return state;\n};\n\nexport default connect(mapStateToProps)(Post);\n  ","import { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport HeaderProfile from \"./HeaderProfile\";\nimport Post from \"./Post\";\n\nimport * as utils from \"../../Utils\";\n\nfunction Profile(props) {\n  const [name, setName] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    const getPosts = async () => {\n      try {\n        let tempName = props.location.pathname.split(\"/\");\n        let response = await fetch(\n          `${utils.backendRoute}/posts/profile/${tempName[2]}`,\n          {\n            method: \"GET\",\n            headers: {\n              jwt: props.setToken,\n            },\n          }\n        );\n        let final = await response.json();\n        return {\n          posts: final.data,\n          tempName: tempName[2],\n        };\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    getPosts().then((res) => {\n      setName(res.tempName);\n      setPosts(res.posts);\n    });\n  }, [props.location.pathname, props.setToken]);\n\n  const renderCards = () => {\n    if (posts.length === 0) {\n      return <div>LOOOOOOOOOOOADING.......</div>;\n    } else {\n      return posts.map((post) => {\n        return (\n          <Post\n            key={post.imageId}\n            post={post.imageId}\n            name={name}\n            history={props.history}\n          />\n        );\n      });\n    }\n  };\n\n  return (\n    <section className=\"section has-background-light custom-border-top\">\n      <div className=\"custom-body-center\">\n        <HeaderProfile posts={posts.length} name={name} />\n        <section className=\"section custom-border-top\">\n          <div className=\"columns is-multiline\">{renderCards()}</div>\n        </section>\n      </div>\n    </section>\n  );\n}\n\nconst mapStateToProps = state => {\n    return state;\n};\nexport default connect(mapStateToProps, null)(Profile);\n  ","import React, {useState} from \"react\";\nimport { connect } from \"react-redux\";\nimport * as utils from '../../Utils'\nimport {isLoggedIn, loginToken} from '../../actions'\n\n\nfunction CreatePicture(props){\n  const [works, setWorks] = useState(false)\n  const [desc, setDesc] = useState('')\n  \n\n  const mySubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      let file = event.target.file;\n      const formData = new FormData();\n      formData.append(\"image\", file.files[0]);\n      formData.append(\"description\", desc);\n      formData.append('username', props.getUser)\n\n      let response = await fetch(`${utils.backendRoute}/posts/upload`, {\n        method: \"POST\",\n        headers: {\n          \"jwt\": props.setToken,\n        },\n        body: formData\n      });\n\n      let result = await response.json();\n      if(result.msg === \"Token is expired\"){\n        props.loginToken('')\n        props.isLoggedIn(false)\n\n      }else{\n        setWorks(true)\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  return (\n    <div className=\"hero has-background-light custom-border-top is-fullheight\">\n      <div className=\"custom-container-create-post\">\n        <div className=\"custom-create-post\">\n          <h1 className=\"title\" style={{ textAlign: \"center\" }}>\n            Upload Image\n          </h1>\n          {\n            works ? (\n              <div className=\"notification is-success\" style={{ textAlign: \"center\" }}> Image Successfully Uploaded!! </div>\n            ) : null\n          }\n          <form onSubmit={mySubmitHandler}>\n            <fieldset>\n              <div className=\"field\">\n                <label className=\"label\">Description</label>\n                <div className=\"control\">\n                  <textarea\n                    className=\"textarea\"\n                    placeholder=\"Enter description here...\"\n                    name=\"description\"\n                    onChange={e => setDesc(e.target.value)}\n                  ></textarea>\n                </div>\n              </div>\n              <div className=\"file\" style={{ marginBottom: \"15px\" }}>\n                <label className=\"file-label\">\n                  <input\n                    className=\"file-input\"\n                    type=\"file\"\n                    name=\"file\"\n                    id=\"file\"\n                  />\n                  <span className=\"file-cta\">\n                    <span className=\"file-icon\">\n                      <i className=\"fas fa-upload\"></i>\n                    </span>\n                    <span className=\"file-label\">Choose a file…</span>\n                  </span>\n                </label>\n              </div>\n              <div\n                className=\"field is-grouped\"\n                style={{ justifyContent: \"center\" }}\n              >\n                <div className=\"control\">\n                  <button className=\"button is-link\">Submit</button>\n                </div>\n                <div className=\"control\">\n                  <button className=\"button is-link is-light\">Cancel</button>\n                </div>\n              </div>\n            </fieldset>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n\n\nconst mapStateToProps = state => {\n  return state;\n};\nexport default connect(mapStateToProps, {\n  isLoggedIn,\n  loginToken\n})(CreatePicture);\n","import Navbar from './components/Navbar'\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport Body from \"./components/Home\";\nimport Profile from './components/Profile'\nimport CreatePicture from './components/CreatePicture'\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nfunction App(props) {\n  const loggedTrue = () =>{\n    return (\n      <div>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/login\">\n            <Redirect to=\"/home\" />\n          </Route>\n          <Route exact path=\"/register\">\n            <Redirect to=\"/home\" />\n          </Route>\n          <Route exact path=\"/home\" component={Body} />\n          <Route exact path=\"/\">\n            <Redirect to=\"/home\" />\n          </Route>\n          <Route exact path=\"/profile/:profile\" component={Profile} />\n          <Route exact path=\"/upload\" component={CreatePicture} />\n          <SignUp />\n        </Switch>\n      </div>\n    )\n  }\n\n  const loggedFalse = () =>{\n      return(\n        <div>\n          <Switch>\n            <Route exact path=\"/\">\n              <Redirect to=\"/login\" />\n            </Route>\n            <Route exact path=\"/home\">\n              <Redirect to=\"/login\" />\n            </Route>\n            <Route exact path=\"/profile/:profile\">\n              <Redirect to=\"/login\" />\n            </Route>\n            <Route exact path=\"/upload\">\n              <Redirect to=\"/login\" />\n            </Route>\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={SignUp} />\n          </Switch>\n        </div>\n      )\n  }\n  return (\n    <div>\n        {props.loggedIn ? loggedTrue() : loggedFalse()}\n    </div>\n  )\n}\n\nconst mapStateToProps = state => {\n  return state;\n};\nexport default connect(mapStateToProps, null)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers/index\";\nimport App from \"./App\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <Router basename='/'> */}\n    <HashRouter>\n      <App />\n    </HashRouter>\n    {/* </Router> */}\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}